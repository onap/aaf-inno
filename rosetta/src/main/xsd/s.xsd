<!--
  ============LICENSE_START====================================================
  * org.onap.aai
  * ===========================================================================
  * Copyright © 2017 AT&T Intellectual Property. All rights reserved.
  * Copyright © 2017 Amdocs
  * ===========================================================================
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  * 
   *      http://www.apache.org/licenses/LICENSE-2.0
  * 
   * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  * ============LICENSE_END====================================================
  *
  * ECOMP is a trademark and service mark of AT&T Intellectual Property.
  *
-->
<xs:schema elementFormDefault="qualified" 
		   targetNamespace="urn:s:xsd" 
		   xmlns:s="urn:s:xsd" 
		   xmlns:xs="http://www.w3.org/2001/XMLSchema"
		   >
		   
	<xs:element name="SampleData">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="xs:string" minOccurs="1" maxOccurs="1" />
				<xs:element name="date" type="xs:long"/>
				<xs:element name="item" type="xs:string" maxOccurs="unbounded" />				 
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="LargerData">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="s:SampleData" minOccurs="1" maxOccurs="unbounded"/>
				<xs:element name="fluff" type="xs:string"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="LargerDatas">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="s:LargerData" minOccurs="1" maxOccurs = "unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	

	<xs:element name="Multi">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="f1" type="xs:string" minOccurs="0" maxOccurs = "unbounded"/>
				<xs:element name="f2" type="xs:string" minOccurs="0" maxOccurs = "unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
</xs:schema>
